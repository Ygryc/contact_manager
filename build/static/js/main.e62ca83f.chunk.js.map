{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","map","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","ropTypes","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6RAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAIvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASK,IAAI,SAAAH,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAIV,IAAK,iBACH,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVE,OAAAR,OAAAS,EAAA,EAAAT,CAAsBH,EAAMK,aAExC,QACE,OAAOL,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAP,OAAAW,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EASsBC,IAAMC,IAAI,8CAThC,OASUN,EATVE,EAAAK,KAUI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAVlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAsBI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAxBpBzC,EAAA,CAA8B0C,aA8BjBC,EAAW5D,EAAQ4D,iBCiBjBC,oNA3EbzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMc,OAAN,8CAAAjD,OAA2DH,IADnD,OAGdqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAH9B,wBAAAmC,EAAAO,SAAAV,sIAUP,IAAAqB,EAAA3C,KAAA4C,EAC4B5C,KAAKmC,MAAM9C,QAAtCC,EADDsD,EACCtD,GAAIuD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBP,EAAoBxC,KAAKlB,MAAzB0D,gBAER,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,uBACbf,EAAAb,EAAAc,cAAA,UACGW,EAAM,IACPZ,EAAAb,EAAAc,cAAA,KACEe,QAAS,WACPN,EAAK/B,SAAS,CACZ4B,iBAAkBG,EAAK7D,MAAM0D,mBAGjCQ,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBlB,EAAAb,EAAAc,cAAA,KACEe,QAASN,EAAKF,cAAcW,KAAKT,EAAMrD,EAAIqB,GAC3CqC,UAAU,eACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,aAGXrB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,gBAAA/D,OAAkBH,IACxB2C,EAAAb,EAAAc,cAAA,KACEc,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRG,MAAO,QACPG,YAAa,MACbJ,MAAO,aAMdb,EACCP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCF,GACxCb,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCD,IAExC,eA/DIV,cCqBPqB,mLArBX,OACEzB,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMuC,SAAP,KACE1B,EAAAb,EAAAc,cAAA,MAAIc,UAAU,kBACX,IACDf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,WAFF,QAIC7D,EAASK,IAAI,SAAAH,GAAO,OACnB4C,EAAAb,EAAAc,cAAC0B,EAAD,CAAS7C,IAAK1B,EAAQC,GAAID,QAASA,gBAb5BgD,sDCAjBwB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAlB,EAMIiB,EANJjB,KACA7B,EAKI8C,EALJ9C,MACAgD,EAIIF,EAJJE,YACAhF,EAGI8E,EAHJ9E,KACAiF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEjC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOiC,QAAStB,GAAOkB,GACvB9B,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN6D,KAAMA,EACNmB,YAAaA,EACbhB,UAAWoB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBlD,MAAOA,EACPiD,SAAUA,IAEXC,GAASjC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAoBkB,KAKnDL,EAAeS,SAAW,CACxBzB,KAAM0B,IAAUC,OAAOC,WACvBV,MAAOQ,IAAUC,OAAOC,WACxBT,YAAaO,IAAUC,OAAOC,WAC9BzF,KAAMuF,IAAUC,OAAOC,WACvBzD,MAAOuD,IAAUC,OAAOC,WACxBR,SAAUM,IAAUG,KAAKD,WACzBP,MAAOK,IAAUC,QAGnBX,EAAec,aAAe,CAC5B3F,KAAM,QAEO6E,QCqFAe,6MA3Hb9F,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAGVZ,SAAW,SAAAa,GAAC,OAAIhF,EAAKc,SAAL3B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB6F,EAAEE,OAAOnC,KAAOiC,EAAEE,OAAOhE,WAE1DiE,+CAAW,SAAA3D,EAAOX,EAAUmE,GAAjB,IAAAI,EAAArC,EAAAC,EAAAC,EAAAoC,EAAA5D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTmD,EAAEM,iBADOF,EAGsBpF,EAAKhB,MAA5B+D,EAHCqC,EAGDrC,KAAMC,EAHLoC,EAGKpC,MAAOC,EAHZmC,EAGYnC,MAGR,KAATF,EANK,CAAApB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CACZiE,OAAQ,CACNhC,KAAM,sBATHpB,EAAA4D,OAAA,oBAeK,KAAVvC,EAfK,CAAArB,EAAAE,KAAA,eAgBP7B,EAAKc,SAAS,CACZiE,OAAQ,CACN/B,MAAO,uBAlBJrB,EAAA4D,OAAA,oBAwBK,KAAVtC,EAxBK,CAAAtB,EAAAE,KAAA,gBAyBP7B,EAAKc,SAAS,CACZiE,OAAQ,CACN9B,MAAO,uBA3BJtB,EAAA4D,OAAA,yBAiCHF,EAAa,CACjBtC,OACAC,QACAC,SApCOtB,EAAAE,KAAA,GAuCSC,IAAM0D,KACtB,6CACAH,GAzCO,QAuCH5D,EAvCGE,EAAAK,KA4CTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAO7CjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAEV/E,EAAKqC,MAAMoD,QAAQC,KAAK,KAzDf,yBAAA/D,EAAAO,SAAAV,sIA4DF,IAAAqB,EAAA3C,KAAAyF,EACgCzF,KAAKlB,MAApC+D,EADD4C,EACC5C,KAAMC,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO8B,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,eACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM+C,SAAUtC,EAAKsC,SAAS7B,KAAKT,EAAMhC,IACvCsB,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,OACNlB,KAAK,OACLmB,YAAY,gBACZhD,MAAO6B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAOhC,OAGhBZ,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,QACNlB,KAAK,QACL7D,KAAK,QACLgF,YAAY,iBACZhD,MAAO8B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAO/B,QAGhBb,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,QACNlB,KAAK,QACLmB,YAAY,iBACZhD,MAAO+B,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAO9B,QAGhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNgC,UAAU,yCAjHLX,aCyIVsD,6MAvIb7G,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAkBVZ,SAAW,SAAAa,GAAC,OAAIhF,EAAKc,SAAL3B,OAAA8F,EAAA,EAAA9F,CAAA,GAAiB6F,EAAEE,OAAOnC,KAAOiC,EAAEE,OAAOhE,WAE1DiE,+CAAW,SAAA3D,EAAOX,EAAUmE,GAAjB,IAAAI,EAAArC,EAAAC,EAAAC,EAAA6C,EAAAtG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTmD,EAAEM,iBADOF,EAGsBpF,EAAKhB,MAA5B+D,EAHCqC,EAGDrC,KAAMC,EAHLoC,EAGKpC,MAAOC,EAHZmC,EAGYnC,MAGR,KAATF,EANK,CAAApB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CACZiE,OAAQ,CACNhC,KAAM,sBATHpB,EAAA4D,OAAA,oBAeK,KAAVvC,EAfK,CAAArB,EAAAE,KAAA,eAgBP7B,EAAKc,SAAS,CACZiE,OAAQ,CACN/B,MAAO,uBAlBJrB,EAAA4D,OAAA,oBAwBK,KAAVtC,EAxBK,CAAAtB,EAAAE,KAAA,gBAyBP7B,EAAKc,SAAS,CACZiE,OAAQ,CACN9B,MAAO,uBA3BJtB,EAAA4D,OAAA,yBAiCHO,EAAa,CACjB/C,OACAC,QACAC,SAGMzD,EAAOQ,EAAKqC,MAAM0D,MAAMC,OAAxBxG,GAvCCmC,EAAAE,KAAA,GAyCSC,IAAMmE,IAAN,8CAAAtG,OAC8BH,GAC9CsG,GA3CO,QAyCHrE,EAzCGE,EAAAK,KA8CTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAEhDjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAEV/E,EAAKqC,MAAMoD,QAAQC,KAAK,KAtDf,yBAAA/D,EAAAO,SAAAV,0QAhBDhC,EAAOU,KAAKmC,MAAM0D,MAAMC,OAAxBxG,YACUsC,IAAMC,IAAN,8CAAApC,OAC8BH,WAD1CiC,SAIAlC,EAAUkC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZiC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IA+DV,IAAAJ,EAAA3C,KAAAyF,EACgCzF,KAAKlB,MAApC+D,EADD4C,EACC5C,KAAMC,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO8B,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM+C,SAAUtC,EAAKsC,SAAS7B,KAAKT,EAAMhC,IACvCsB,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,OACNlB,KAAK,OACLmB,YAAY,gBACZhD,MAAO6B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAOhC,OAGhBZ,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,QACNlB,KAAK,QACL7D,KAAK,QACLgF,YAAY,iBACZhD,MAAO8B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAO/B,QAGhBb,EAAAb,EAAAc,cAACwD,EAAD,CACE3B,MAAM,QACNlB,KAAK,QACLmB,YAAY,iBACZhD,MAAO+B,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOW,EAAO9B,QAGhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,eACNgC,UAAU,yCA7HJX,aCH1B,SAAS2D,EAAO7D,GAAO,IACb8D,EAAa9D,EAAb8D,SAER,OACEhE,EAAAb,EAAAc,cAAA,OAAKc,UAAU,2DACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,KAAGgE,KAAK,IAAIlD,UAAU,gBACnBiD,GAEHhE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,SAKFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1Bf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBADf,UAKFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,YAYdgD,EAAOrB,aAAe,CACpBsB,SAAU,YAOGD,QC7CA,SAASG,IACtB,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,yBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,iCACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,8BCLS,SAASoD,IACtB,OACEnE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aACZf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,QADF,iBAGAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,gDC2BSqD,MArBf,WACE,OACEpE,EAAAb,EAAAc,cAACoE,EAAD,KACErE,EAAAb,EAAAc,cAACqB,EAAA,EAAD,KACEtB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACbf,EAAAb,EAAAc,cAACqE,EAAD,CAAQN,SAAS,oBACjBhE,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAACsE,EAAA,EAAD,KACEvE,EAAAb,EAAAc,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjCzB,EAAAb,EAAAc,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW/B,IAC5C3C,EAAAb,EAAAc,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWhB,IACjD1D,EAAAb,EAAAc,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWR,IACtClE,EAAAb,EAAAc,cAACsE,EAAA,EAAD,CAAOG,UAAWP,UCdZQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCZNmB,IAASC,OAAOhF,EAAAb,EAAAc,cAACgF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e62ca83f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n\r\n    /* axios\r\n      .get('https://jsonplaceholder.typicode.com/users')\r\n      .then(res => this.setState({ contacts: res.data }));*/\r\n\r\n    /* fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(data => console.log(data));*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { async } from 'q';\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n\r\n    /*axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));*/\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className='fas fa-times'\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: '#f10000'\r\n                  }}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt'\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: 'black',\r\n                      marginRight: '1em',\r\n                      float: 'right'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {email}</li>\r\n                  <li className='list-group-item'>Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                {' '}\r\n                <span className='text-danger'>Contact</span>List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.ropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nimport { async } from 'q';\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    /*axios\r\n      .post('https://jsonplaceholder.typicode.com/users', newContact)\r\n      .then(res => dispatch({ type: 'ADD_CONTACT', payload: res.data }));*/\r\n\r\n    //Clear state after submiting the form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter name...'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter phone...'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-danger btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Link from 'react-dom';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nimport { async } from 'q';\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is Required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n    //Clear state after submiting the form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter name...'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    type='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter phone...'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Edit Contact'\r\n                    className='btn btn-danger btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nfunction Header(props) {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <a href='/' className='navbar-brand'>\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <i className='fas fa-home' />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <i className='fas fa-question' />\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/contact/add' className='nav-link'>\r\n                <i className='fas fa-plus' />\r\n                Add\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Some App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple app to manage contacts</p>\r\n      <p className='text-secondary'>Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404 </span>Page not Foud\r\n      </h1>\r\n      <p className='lead'>Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header branding='Contact Manager' />\n          <div className='container'>\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n              <Route exact path='/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}